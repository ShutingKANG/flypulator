<?xml version="1.0"?>
<launch>
 <rosparam command="load" file="$(find flypulator_description)/param/state_estimation_param.yaml" />
 <rosparam command="load" file="$(find flypulator_description)/param/aero_param.yaml" />
 <rosparam command="load" file="$(find flypulator_description)/param/drone_parameter.yaml" />

 <arg name="model" default="$(find flypulator_description)/urdf/hexarotor_igs.urdf"/>

  <include file="$(find gazebo_ros)/launch/empty_world.launch" />

  <!-- <node
    name="tf_footprint_base"
    pkg="tf"
    type="static_transform_publisher"
    args="0 0 0 0 0 0 base_link base_footprint 40" /> -->

  <node
    name="spawn_model"
    pkg="gazebo_ros"
    type="spawn_model"
    args="-file $(arg model) -urdf -model drone"
    output="screen" > 
  </node>
     
 <!-- <node 
    name="controller_spawner" 
    pkg="controller_manager" 
    type="spawner" 
    respawn="false" 
    output="screen" 
    ns="/drone" 
    args="joint_state_controller" >
    <rosparam file="$(find flypulator_description)/param/jointstatecontroller.yaml" command="load"/>
 </node> -->

  <!-- <node 
    name="controller_spawner" 
    pkg="controller_manager" 
    type="spawner" 
    respawn="false" 
    output="screen" 
    args="joint_state_controller" >
    <rosparam file="$(find flypulator_description)/param/jointstatecontroller.yaml" command="load"/>
 </node> -->

 <param name="robot_description" command="$(find xacro)/xacro --inorder $(arg model)" />
 <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" respawn="false" output="screen">
    <remap from="/joint_states" to="/drone/joint_states" />
 </node>

<include file="$(find flypulator_teleop)/launch/joy.launch" />

</launch>
